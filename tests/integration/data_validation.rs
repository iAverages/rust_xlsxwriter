// Test case that compares a file generated by rust_xlsxwriter with a file
// created by Excel.
//
// SPDX-License-Identifier: MIT OR Apache-2.0
//
// Copyright 2022-2024, John McNamara, jmcnamara@cpan.org

use std::vec;

use crate::common;
use rust_xlsxwriter::{DataValidation, Workbook, XlsxError};

// Create rust_xlsxwriter file to compare against Excel file.
fn create_new_xlsx_file(filename: &str) -> Result<(), XlsxError> {
    let mut workbook = Workbook::new();

    let worksheet = workbook.add_worksheet();

    worksheet.write(0, 0, 10)?;
    worksheet.write(1, 0, 20)?;
    worksheet.write(2, 0, 30)?;
    worksheet.write(3, 0, 40)?;

    let mut data_validation = DataValidation::new();

    data_validation.set_sqref("A1", "A4");
    data_validation.set_formula1("abc,xyz");
    data_validation.set_type("list");

    worksheet.set_data_validation(vec![data_validation.clone()]);

    workbook.save(filename)?;

    Ok(())
}

#[test]
fn test_data_validation() {
    let test_runner = common::TestRunner::new()
        .ignore_file("docProps/app.xml")
        .ignore_file("xl/styles.xml")
        .ignore_file("docProps/core.xml")
        .set_name("data_validation")
        .set_function(create_new_xlsx_file)
        .initialize();

    test_runner.assert_eq();
    test_runner.cleanup();
}
